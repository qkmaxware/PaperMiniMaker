<div class="w3-modal @showModalCss">
    <div class="w3-modal-content w3-round-xlarge">
        <header class="w3-container w3-center w3-xlarge">
            Edit Playing Card
        </header>
        @if (card != null) {
        <div class="w3-container bg">
            <label>Replicas</label>
            <input type="number" class="w3-input w3-margin-bottom" @bind=@card.Replicas style="background-color:inherit; color:inherit;">
            
            <div class="w3-margin-top w3-margin-bottom">
                <div class="w3-padding" style="background-color: #2D232E;">
                    <label>Front Art Url</label>
                    <input class="w3-input" @bind=@card.FrontUrl style="background-color:inherit; color:inherit;">
                    <div class="w3-center w3-padding">
                        OR
                    </div>
                    <FilePicker Accept="image/*" AsDataUrl=true OnFileLoad=@((url) => { card.FrontUrl = url; StateHasChanged(); })></FilePicker>

                    <div class="w3-margin-top">&nbsp;</div>

                    <label>Back Art Url</label>
                    <input class="w3-input" @bind=@card.BackUrl style="background-color:inherit; color:inherit;">
                    <div class="w3-center w3-padding">
                        OR
                    </div>
                    <FilePicker Accept="image/*" AsDataUrl=true OnFileLoad=@((url) => { card.BackUrl = url; StateHasChanged(); })></FilePicker>
                </div>
            </div>
        </div>
        <footer class="w3-container w3-center">
            <button class="w3-button" @onclick=save>Done</button>
        </footer>
        }
    </div>
</div>

@code {
    [Parameter] public Action OnChange {get; set;}
    private PlayingCard card;

    private bool isOpen = false;
    private string showModalCss => isOpen ? "w3-show" : "w3-hide";

    public void Edit(PlayingCard card) {
        this.card = card;
        this.isOpen = true;
        StateHasChanged();
    }

    public void save() {
        OnChange?.Invoke();
        this.isOpen = false;
    }
}