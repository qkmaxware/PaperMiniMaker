<div class="solid" style="padding: 2px;">
@if (Terrain != null) {
if (Terrain.Kind == TerrainKind.Freestanding) {
<div class="solid" style="width: @(Terrain.Length)in;">
    <div class="cut-top cut-left cut-right" style="width: 100%; height: 0.5in;"></div>
    <div class="cut-left cut-right fold-top fold-bottom" style="height: @(Terrain.Height)in;">
        <div class="fill yflip">
            <img class="fill pixelart" src="@Terrain.Art.Url" style="object-fit: fill;">
        </div>
    </div>
    <div class="cut-left cut-right fold-top fold-bottom" style="height: @(Terrain.Height)in;">
        <div class="fill">
            <img class="fill pixelart" src="@Terrain.Art.Url" style="object-fit: fill;">
        </div>
    </div>
    <div class="cut-bottom cut-left cut-right" style="width: 100%; height: 0.5in;"></div>
</div>
} else if (Terrain.Kind == TerrainKind.Clip) {
<div class="solid" style="width: @(Terrain.Length)in;">
    <div class="cut-left cut-right cut-top fold-bottom" style="height: @(Terrain.Height)in;">
        <div class="fill">
            <img class="fill pixelart" src="@Terrain.Art.Url" style="object-fit: fill;">
        </div>
    </div>

    <div class="fold-top cut-left cut-right print-bg w3-light-grey w3-center" style="height: @(Terrain.HalfHeight)in;">
        no-glue
    </div>
    <div class="fold-bottom cut-left cut-right" style="height: @(Terrain.HalfHeight)in;">

    </div>

    <div class="fold-bottom fold-top cut-left cut-right" style="height: @(Terrain.HalfHeight)in;">

    </div>
    <div class="fold-bottom fold-top cut-left cut-right" style="height: @(Terrain.HalfHeight)in;">

    </div>

    <div class="fold-top cut-left cut-right" style="height: @(Terrain.HalfHeight)in;">

    </div>
    <div class="fold-bottom cut-left cut-right print-bg w3-light-grey w3-center" style="height: @(Terrain.HalfHeight)in;">
        no-glue
    </div>

    <div class="cut-left cut-right fold-top cut-bottom" style="height: @(Terrain.Height)in;">
        <div class="fill yflip">
            <img class="fill pixelart" src="@Terrain.Art.Url" style="object-fit: fill;">
        </div>
    </div>
</div>
} else if (Terrain.Kind == TerrainKind.Floor) {
<div class="solid fit-image" style="width: @(Terrain.Length)in; height: @(Terrain.Depth)in;">
    <img src="@(Terrain.Art.Url)" class="pixelart">
</div>
}else if (Terrain.Kind == TerrainKind.Platform) {
<div class="solid">
    <div style="display: flex;">
        <div class="solid cut-left cut-top fold-right cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Height)in;"></div>
        <div class="solid fold-left fold-right cut-top fold-bottom" style="width: @(Terrain.Length)in; height: @(Terrain.Height)in;">
            @if (Terrain.FrontBackSupportArt != null && !string.IsNullOrEmpty(Terrain.FrontBackSupportArt.Url)) {
            <div class="fill">
                <img class="fill pixelart yflip" src="@Terrain.FrontBackSupportArt.Url" style="object-fit: fill;">
            </div>
            }
        </div>
        <div class="solid cut-right cut-top fold-left cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Height)in;"></div>
    </div>
    <div style="display: flex;">
        <div class="solid cut-left cut-top fold-right cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Depth)in;">
            @if (Terrain.LeftRightSupportArt != null && !string.IsNullOrEmpty(Terrain.LeftRightSupportArt.Url)) {
            <div class="fill center-image-rotate90">
                <img class="pixelart" src="@Terrain.LeftRightSupportArt.Url" style="object-fit: fill; width: @(Terrain.Length)in; height: @(Terrain.Depth)in;">
            </div>
            }
        </div>
        <div class="solid fold-left fold-right fold-top fold-bottom" style="width: @(Terrain.Length)in; height: @(Terrain.Depth)in;">
            <div class="fill">
                <img class="fill pixelart" src="@Terrain.Art.Url" style="object-fit: fill;">
            </div>
        </div>
        <div class="solid cut-right cut-top fold-left cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Depth)in;">
            @if (Terrain.LeftRightSupportArt != null && !string.IsNullOrEmpty(Terrain.LeftRightSupportArt.Url)) {
            <div class="fill center-image-rotate-90">
                <img class="pixelart" src="@Terrain.LeftRightSupportArt.Url" style="object-fit: fill; width: @(Terrain.Length)in; height: @(Terrain.Height)in;">
            </div>
            }
        </div>
    </div>
    <div style="display: flex;">
        <div class="solid cut-left cut-top fold-right cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Height)in;"></div>
        <div class="solid fold-left fold-right fold-top cut-bottom" style="width: @(Terrain.Length)in; height: @(Terrain.Height)in;">
            @if (Terrain.FrontBackSupportArt != null && !string.IsNullOrEmpty(Terrain.FrontBackSupportArt.Url)) {
            <div class="fill">
                <img class="fill pixelart" src="@Terrain.FrontBackSupportArt.Url" style="object-fit: fill;">
            </div>
            }
        </div>
        <div class="solid cut-right cut-top fold-left cut-bottom" style="width: @(Terrain.Height)in; height: @(Terrain.Height)in;"></div>
    </div>
</div>
}
}
</div>

@code {
    [Parameter] public Terrain Terrain {get; set;}
}